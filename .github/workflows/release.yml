name: Release
on:
  push:
    branches: main
env:
  CI: true
jobs:
  build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: install pnpm
        run: npm i pnpm@latest -g

      - name: install dependencies
        run: pnpm install --frozen-lockfile=false

      - name: get version
        id: package-version
        run: echo '::set-output name=version::$(node -p "require('./package.json').version")'

      - name: build
        run: pnpm build

      - name: pack
        run: |
          pnpm run pack

      - uses: actions/upload-artifact@v3
        name: upload
        with:
          path: |
            extension.zip
            extension.crx
            extension.xpi
          retention-days: 1

      - uses: "marvinpinto/action-automatic-releases@latest"
        name: release
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.package-version.outputs.version }}
          prerelease: ${{ steps.package-version.outputs.version }} == 'prerelease' }}
          title: ${{ needs.gen_version.outputs.version }}
          files: |
            LICENSE
            extension.zip
            extension.xrc
            extension.xpi
